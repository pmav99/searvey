[project]
name = "searvey"
version = "0.0.0" # overwritten by poetry-dynamic-versioning plugin
description = "Sea state observational data retrieval"
authors = [
    { name = "Panos Mavrogiorgos", email = "pmav99@gmail.com" },
    { name = "Zachary Burnett", email = "zachary.r.burnett@gmail.com" },
    { name = "Soroosh Mani", email = "soroosh.mani@noaa.gov" },
]
license = 'GPL-3.0-or-later'
readme = "README.md"
repository = "https://github.com/oceanmodeling/searvey.git"
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Hydrology",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.9,<4"

dependencies = [
    "Shapely",
    "beautifulsoup4",
    "dataretrieval",
    "deprecated",
    "erddapy",
    "geopandas",
    "html5lib",
    "httpx",
    "limits",
    "lxml[html-clean]",
    "multifutures",
    "ndbc-api",
    "numpy",
    "pandas",
    "pydantic (>2)",
    "rasterio (>1.0)",
    "requests",
    "tenacity (!=8.4.0)",   # https://github.com/jd/tenacity/issues/471
    "tqdm",
    "xarray",
]

[tool.poetry.group.dev.dependencies]
covdefaults = "*"
coverage = {version = "*", extras = ["toml"]}
mypy = ">=1"
nbmake = "*"
pytest = "*"
pytest-cov = ">=3.0"
pytest-recording = "*"
pytest-xdist = "*"
types-beautifulsoup4 = "*"
types-deprecated = "*"
#types-geopandas = "*"
#types-lxml = "*"
types-requests = "*"
typing-extensions = "*"
#types-shapely = "*"
#types-tqdm = "*"
#urllib3 = "<2"   # https://github.com/kevin1024/vcrpy/issues/688
#urllib3 = { version = "*", python = ">3.10" }

[tool.poetry.group.docs.dependencies]
dunamai = "*"
furo = "*"
sphinx-mdinclude = "*"
setuptools = "*"
sphinx = "*"
sphinxext-opengraph = "*"
toml = "*"
sphinx-autodoc-typehints = "*"

[tool.poetry.group.jupyter.dependencies]
hvplot = {version = "*", extras = ["geo"]}
ipykernel = "*"
matplotlib = "*"
scipy = "*"
tqdm = {version = "*", extras = ["notebook"]}
types-tqdm = "*"

[tool.poetry-dynamic-versioning]
enable = true
dirty = true

[build-system]
requires = [
    "poetry-core>=2.0.0,<3.0.0",
    "poetry-dynamic-versioning",
]
build-backend = "poetry_dynamic_versioning.backend"

[tool.black]
line-length = 108
target-version = ['py39']

[tool.pytest.ini_options]
addopts = "-ra --verbose --showlocals --tb=short"
testpaths = ["tests"]
log_cli = true
filterwarnings = [
    'ignore:distutils Version classes are deprecated. Use packaging.version instead:DeprecationWarning',
    'ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning',
    'ignore::DeprecationWarning',
]

[tool.mypy]
python_version = "3.9"
plugins = ["pydantic.mypy"]
show_error_codes = true
show_column_numbers = true
show_error_context = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true
strict = true
ignore_missing_imports = true

# FIXME These errors get thrown by `searvey/coops.py`
# I can't find a way to disable them on a per-module basis, so we are disabling them globally.
# We should comment them out one by one, run `make mypy`, fix the errors and move on.
disable_error_code = [
    "assignment",
    "override",
    "attr-defined",
    "no-any-return",
    "unreachable",
]

# mypy per-module options:
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.ruff]
target-version = "py39"
line-length = 108
lint.select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "C90",  # mccabe
]
lint.ignore = [
    "E501", # line-too-long
]

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["searvey"]
concurrency = [
  "multiprocessing",
  "thread",
]
parallel = true
sigterm = true

[tool.coverage.report]
fail_under = 89
